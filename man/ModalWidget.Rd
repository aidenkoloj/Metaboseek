% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Widget_DownloadPlotWidget.R,
%   R/Widget_ModalWidget.R
\name{DownloadPlotWidget}
\alias{DownloadPlotWidget}
\alias{ModalWidget}
\alias{ModalWidgetUI}
\title{DownloadPlotWidget}
\usage{
DownloadPlotWidget(
  input,
  output,
  session,
  R.filename = reactive({     paste0(strftime(Sys.time(), "\%Y\%m\%d_\%H\%M\%S"), "_",
    "plotoutput") }),
  R.plot = reactive({     plot(1:3) }),
  static = list(tooltip = "Download this plot", title = "Download Options", label = "",
    icon = icon("download", lib = "font-awesome"))
)

ModalWidget(
  input,
  output,
  session,
  reactives = reactive({     fp = NULL }),
  static = list(tooltip = "Tooltip", title = "title", label = "label", icon =
    icon("bar-chart", lib = "font-awesome"), modalButtonLabel = "Cancel"),
  useActionLink = F,
  style = "color:#ffffff;padding:15px;border-left-width:0;border-right:1px solid #eee"
)

ModalWidgetUI(id)
}
\arguments{
\item{input}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{output}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{session}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{R.filename}{File name, without extension.}

\item{R.plot}{The plot object (will be evaluated in plotting device of download handler)}

\item{static}{passed on to \code{ModalWidget}}

\item{reactives}{a \code{reactive({})} returning a list with one element,
\code{fp}, see details}

\item{useActionLink}{if TRUE, will use an \code{actionLink} instead 
of an \code{actionButton} to open the modal Dialog}

\item{id}{id to be used to define a namespace via  \code{\link[shiny]{NS}()}
(must match \code{id} in \code{\link[shiny]{callModule}} 
for the server Module)}
}
\value{
returns its internalValues

returns its internalValues
}
\description{
Generic module for modal dialogs that are launched from a button.

Generic module for modal dialogs that are launched from a button.
}
\details{
Because the UI elements of the modal dialog are passed in as 
\code{reactives()$fp}, they can be namespaced and easily accessed in the 
parent module that can then handle the input from the modal dialog.
\describe{
\item{static}{
\itemize{
\item \code{tooltip} tooltip when hovering over the button
\item \code{title} title of the modal dialog
\item \code{label} label of the button opening the modal dialog
\item \code{icon} \code{\link[shiny]{icon}()} of the button opening the modal dialog
}
}
}

Because the UI elements of the modal dialog are passed in as 
\code{reactives()$fp}, they can be namespaced and easily accessed in the 
parent module that can then handle the input from the modal dialog.
\describe{
\item{reactives()$fp}{Specify the UI elements of the modal dialog here}
\item{static}{
\itemize{
\item \code{tooltip} tooltip when hovering over the button
\item \code{title} title of the modal dialog
\item \code{label} label of the button opening the modal dialog
\item \code{icon} \code{\link[shiny]{icon}()} of the button opening the modal dialog
}
}
}
}
\section{Functions}{
\itemize{
\item \code{DownloadPlotWidget}: Server logic

\item \code{ModalWidget}: Server logic

\item \code{ModalWidgetUI}: UI elements
}}

\examples{
\dontrun{
ui <- function(request){
DownloadPlotWidgetUI("PlotDownload")
}
server <- function(input, output, session) {
   callModule(DownloadPlotWidget, "PlotDownload")
}
#Create Shiny app ----
shinyApp(ui, server)
}

}
